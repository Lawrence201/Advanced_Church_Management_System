-- Creating the database
CREATE DATABASE IF NOT EXISTS church_management_system;
USE church_management_system;

-- Table for storing member personal and contact information
CREATE TABLE members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    date_of_birth DATE,
    gender ENUM('male', 'female', '') DEFAULT '',
    marital_status ENUM('single', 'married', 'divorced', 'widowed', '') DEFAULT '',
    occupation VARCHAR(100),
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(100) NOT NULL,
    address VARCHAR(255),
    city VARCHAR(100),
    region VARCHAR(100),
    status ENUM('active', 'inactive') DEFAULT 'active',
    church_group ENUM('dunamis', 'kabod', 'jubah', 'karis', '') DEFAULT '',
    leadership_role ENUM('none', 'pastor', 'minister', 'group_leader') DEFAULT 'none',
    baptism_status ENUM('baptized', 'not_baptized', 'pending', '') DEFAULT '',
    spiritual_growth ENUM('new_believer', 'growing', 'committed', 'leader', '') DEFAULT '',
    membership_type ENUM('full', 'associate', 'visitor', '') DEFAULT '',
    notes TEXT,
    photo_path VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE (email)
);

-- Table for emergency contact information
CREATE TABLE emergency_contacts (
    emergency_id INT AUTO_INCREMENT PRIMARY KEY,
    member_id INT NOT NULL,
    emergency_name VARCHAR(100),
    emergency_phone VARCHAR(20),
    emergency_relation VARCHAR(50),
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE
);

-- Table for ministries
CREATE TABLE ministries (
    ministry_id INT AUTO_INCREMENT PRIMARY KEY,
    ministry_name ENUM('children-ministry', 'women-ministry', 'men-ministry', 'youth-ministry') NOT NULL,
    description TEXT
);

-- Table for departments
CREATE TABLE departments (
    department_id INT AUTO_INCREMENT PRIMARY KEY,
    department_name ENUM('none', 'ursh', 'choir', 'media', 'instrumentalish') NOT NULL,
    description TEXT
);

-- Junction table for member-ministry relationships (many-to-many)
CREATE TABLE member_ministries (
    member_id INT,
    ministry_id INT,
    PRIMARY KEY (member_id, ministry_id),
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE,
    FOREIGN KEY (ministry_id) REFERENCES ministries(ministry_id) ON DELETE CASCADE
);

-- Junction table for member-department relationships (many-to-many)
CREATE TABLE member_departments (
    member_id INT,
    department_id INT,
    PRIMARY KEY (member_id, department_id),
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE,
    FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE
);

-- Table for welcome actions
CREATE TABLE welcome_actions (
    action_id INT AUTO_INCREMENT PRIMARY KEY,
    member_id INT NOT NULL,
    send_welcome_email BOOLEAN DEFAULT FALSE,
    notify_pastor BOOLEAN DEFAULT FALSE,
    create_account BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (member_id) REFERENCES members(member_id) ON DELETE CASCADE
);

-- Insert default ministries
INSERT INTO ministries (ministry_name, description) VALUES
('children-ministry', 'Ministry focused on children’s spiritual growth'),
('women-ministry', 'Ministry for women’s fellowship and support'),
('men-ministry', 'Ministry for men’s fellowship and support'),
('youth-ministry', 'Ministry for youth engagement and development');

-- Insert default departments
INSERT INTO departments (department_name, description) VALUES
('none', 'No department selected'),
('ursh', 'Ushering department'),
('choir', 'Church choir'),
('media', 'Media and technical team'),
('instrumentalish', 'Instrumentalists and music team');